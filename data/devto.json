[
  {
    "type_of": "article",
    "id": 1540655,
    "title": "A study of session sharing across systems that use cookie-based authentication",
    "description": "For a long time I have wanted to code a solution to share the same session between different systems...",
    "published": true,
    "published_at": "2023-07-20T10:08:25.487Z",
    "slug": "a-study-of-session-sharing-across-systems-that-use-cookie-based-authentication-419g",
    "path": "/getjv/a-study-of-session-sharing-across-systems-that-use-cookie-based-authentication-419g",
    "url": "https://dev.to/getjv/a-study-of-session-sharing-across-systems-that-use-cookie-based-authentication-419g",
    "comments_count": 1,
    "public_reactions_count": 0,
    "page_views_count": 254,
    "published_timestamp": "2023-07-20T10:08:25Z",
    "body_markdown": "\nFor a long time I have wanted to code a solution to share the same session between different systems that rely on session and cookie authentication, not tokens, JWT or any other oAuth solution.\n\nDuring my studies, I programmed a Symfony bundle called [jpm/session-sharing-bundle](https://packagist.org/packages/jpm/session-sharing-bundle) that allowed me to create a PoC to test my proposal. Visit my [PoC video demonstration](https://youtu.be/g-CefwgGgqM) to see how it works with a \"real\" example.\n\n## Summary of the idea concept\n\nBut to give you an idea of how it works, it's pretty simple: \n\n1. the solution is that the middleware intercepts the requests to create and restore the session when needed. \n2. the data transfer is cryptographic with **Sync** key, checksum and permission list on both sides.\n3. only the SessionId is transferred, so to recover the data all connected units should use the REDIS connection. \n\n## Flow of data inside the communication\n\n1. The unknown user access `http://remote.test`\n2. The request is intercepted by the `SessionManagerSubscriber` the user is redirected (HTTP 302) to the identity provider using a callback info\n3. The IDP (Host) receives a GET request: `http://host-idp.test/login?callback=aHR0cDovL3JlbW90ZS50ZXN0`.\n4. The `RemoteAuthSubscriber` from IDP (Host) intercepts the call, decodes the callback parameter, extracts the domain, and confirms if it belongs to the allowed list of domains (`JPM_KNOWN_REMOTE_HOSTS`) \n   - if not: it will do/ask the auth but will not redirect to the unknown requester.\n5. Once the request is validated, the IDP verifies if the user has a valid session open.\n   - if not: the auth form from IDP is shown to the user and the callback parameter is kept.\n6. Once the session is created (or exists) the `sessionID` is encrypted using the sync key ad the defuse lib.\n7. Now the user is redirected back to the callback URL with the token param holding the encrypted value.\n8. Now the remote app receives a request: `http://remote.test?token=ZGVmNTAyMDAwYjliZDI5ODU5NGQxYzQwYTE...`\n9. Again the `SessionManagerSubscriber` intercepts the request but now once it finds the token it decodes, decrypts, restores the session and finally lets the identified user access the resource.\n    - if the given session is not valid/found: a 403 is thrown and stops the loop.\nNow the remote app receives a request: `http://remote.test?token=ZGVmNTAyMDAwYjliZDI5ODU5NGQxYzQwYTE...`\nAgain the SessionManagerSubscriber intercepts the request but now once it find the token it decodes, decrypts, restores the session and finally let the identified user access the resource.\nif the given session is not valid/found: a 403 is throw and stops the loop.\n\n## Note of responsibility \n\nA note of responsibility has been added to the library README, but I will post again here. This bundle and the POC were developed as a study case. So is not ready or recommended to use in production, but it can help you to expand and develop your own way to do.\n \n\n",
    "positive_reactions_count": 0,
    "cover_image": null,
    "tag_list": [
      "symfony",
      "security",
      "architecture",
      "webdev"
    ],
    "canonical_url": "https://dev.to/getjv/a-study-of-session-sharing-across-systems-that-use-cookie-based-authentication-419g",
    "reading_time_minutes": 2,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 1511318,
    "title": "React Micro Frontends with Vite",
    "description": "I already have a number of SPA projects and a few projects using Next.js code, but I've always kept...",
    "published": true,
    "published_at": "2023-06-27T21:01:40.823Z",
    "slug": "react-micro-frontends-with-vite-5442",
    "path": "/getjv/react-micro-frontends-with-vite-5442",
    "url": "https://dev.to/getjv/react-micro-frontends-with-vite-5442",
    "comments_count": 1,
    "public_reactions_count": 28,
    "page_views_count": 16764,
    "published_timestamp": "2023-06-27T21:01:40Z",
    "body_markdown": "I already have a number of SPA projects and a few projects using Next.js code, but I've always kept in my mind a curiosity on how micro-frontend works, and now its time to test.\n\nAs with backend micro-services, frontend micro-services are not a \"silver bullet\" architecture, so please use them only when really necessary.\n\nIn this post, I will show the project I used as PoC and how I set it up. Once the projects are turned on, we have only two steps: 1: Export components remotely and 2: Import them into the host.\n\n## Ignition - Inicial Projects\n\nLet's save time... [In my repo](https://github.com/getJv/getjv-micro-fe-react) you can check out the 3 projects required for this tutorial. Download, install the npm dependencies, and go to step 1. If you wish get the final example use the brach related to the step two.\n\n## Step 1: Export a component from App-1\n\nNow in the `app-1` we will install the federation lib and export the component to be used by the `app-container` (host) follow the dots:\n\nIn your terminal go to `app-1` folder and run: \n\n   ```bash\n   npm install @originjs/vite-plugin-federation --save-dev\n   ```\n\nNow open the `vite.config.js` and add the federation config\n\n   ```javascript\n   import { defineConfig } from 'vite'\n   import react from '@vitejs/plugin-react'\n   import federation from \"@originjs/vite-plugin-federation\";\n\n   // https://vitejs.dev/config/\n   export default defineConfig({\n     plugins: [\n         react(),\n         federation({\n           name: 'remote-app', // name of the fed group...\n           filename: 'remoteEntry.js', // default file name\n           // Modules to expose\n           exposes: { \n             './Button': './src/components/Button.jsx',\n           },\n           shared: ['react','react-dom'] // libs/deps to be shared\n         })\n     ],\n     build: {\n       target: 'esnext' // needed to final build\n     },\n   })\n   ```\n\nThe important lines has comments to help you. but now we need to create the component we mapped. Create the componente: `/src/components/Button.jsx'`\n\n   ```javascript\n   import React, {useEffect, useState} from \"react\";\n   const Button = () => {\n       const [count,setCount] = useState(0)\n       return <button\n           onClick={() => setCount(count +1)}\n       > BTN APP 1: {count} </button>\n   }\n   export default Button\n   ``` \n\nOnce the `vite devServer` do not generate physical files we need to `build` and `preview` our `app-1` code. To do that open your `package.json` file and add this script:\n\n   ```javascript\n   // others attributes\n   \"scripts\": {\n       // others cmds...\n       \"preview\": \"tsc && vite build && vite preview --port=5001 --strictPort\"\n   },\n   ```\n Note the we added to preview command the `&& vite build` to generate the files and `&& vite preview --port=5001 --strictPort` to serve the files and force to be strict the port we need.\n\nThis port lock is super important because our host will save the remote uri address. Now just run `npm run preview` and once you access `http://127.0.0.1:5001/assets/remoteEntry.js` you should see some content... For the app-1 we are done.\n\n## Step 2 - Importing the Exported component into a host app.\n\nThe host config is super simple:\n\nGo to `app-container` and install the federation lib too: \n```bash\nnpm install @originjs/vite-plugin-federation --save-dev\n``` \n\nnow add the federation plugin to your `app-container/vite.config.ts` and add the following:\n\n```javascript\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport federation from \"@originjs/vite-plugin-federation\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n      react(),\n      federation({\n        name: 'host-app',\n        remotes: {\n          remoteApp: // is the name set on remote but in camelCase \"http://localhost:5001/assets/remoteEntry.js\",\n        },\n        shared: ['react','react-dom'] \n      })\n  ],\n})\n\n```\nNow just the remote component as a normal component. go to `app-container/App.tsx` and import the component as following:\n\n \n```javascript\nimport MyButton from 'remoteApp/Button\nconst App = () => {\n   return <> <MyButton/> </>\n}\nexport default App\n  \n```\n\nTake a note take about the component namings: \n- `remoteApp` is the name you map on vite federation plugin on host side and \n- `Button` is the mapped name of the component on remote project (`app-1`)\n\nNow just run `npm run dev` and once `app-container` is on it will remote load the button from `app-1` project.\n\n## Next steps\n\nThis is basically what is needed to work with federation and micro frontends. Here we just export/import a component but is possible to do the same with the state.\n\nTo integrate micro-frontend from different projects like Angular.js or Vue.js [visit the examples in the library](https://github.com/originjs/vite-plugin-federation#example-projects)\n\nYou can [checkout my project example](https://github.com/getJv/getjv-micro-fe-react/tree/step2-add-federation) to support your study or [watch my video about this post](https://youtu.be/ymaPetOe6Zg), there I just execute the steps I described here.\n\nI suggest you to [check the video from Jack Herrington](https://www.youtube.com/watch?v=t-nchkL9yIg&ab_channel=JackHerrington) there he shows more examples about how to use federation and mono-repo.\n\nThats it. if this was useful to you please like and share. \n\nSee you!\n",
    "positive_reactions_count": 28,
    "cover_image": null,
    "tag_list": [
      "react",
      "vite",
      "microservices",
      "webdev"
    ],
    "canonical_url": "https://dev.to/getjv/react-micro-frontends-with-vite-5442",
    "reading_time_minutes": 3,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 1483600,
    "title": "Dev Environment with docker, php and Xdebug3!",
    "description": "“If I had eight hours to chop down a tree, I’d spend the first six of them sharpening my axe.” ―...",
    "published": true,
    "published_at": "2023-06-15T22:39:24.311Z",
    "slug": "dev-environment-with-docker-php-and-xdebug3-28m5",
    "path": "/getjv/dev-environment-with-docker-php-and-xdebug3-28m5",
    "url": "https://dev.to/getjv/dev-environment-with-docker-php-and-xdebug3-28m5",
    "comments_count": 0,
    "public_reactions_count": 0,
    "page_views_count": 105,
    "published_timestamp": "2023-06-15T22:39:24Z",
    "body_markdown": "> “If I had eight hours to chop down a tree, I’d spend the first six of them sharpening my axe.”\n― Abraham Lincoln\n\nI love that quote! known well our tools allow us to be more productive and because I love that too today Im going to share  my personal docker image which has been helping day by day to keep my axe shaped! \n\nI wrote other post about some topic years ago, but it needs some update here is it. \n\nThe final product of this guide will be a docker image with a nginx webserver with php-fpm, x-debug and some other hints to support you day-to-day web development using node, queues, redis etc...\n\nIn the next lines you will find a introduction about how to use this image, but if you prefer [you can just watch my explanation video](https://youtu.be/PsrhFUkxpJAX)\n\n## The dockerFile and The docker-compose.yml\n\nLets save our time... so please [visit my repository on git](https://github.com/getJv/php-webserver/tree/mac-system) to checkout, build and use this as local environment to your purposes. The README file will offer extra instructions to you.\n\n## Project scaffold and usage\n\n![Project scaffold. Next section descripes each entry](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l195n9wrvgt39zea6ogc.png)\n\n```\nphp-nginx/ -> Main Project folder\n   config/ -> Config shared between host and container\n      nginx -> Hold ngnix configuration\n         default.config -> each file here maps a host\n   docker-compose.yml -> manager your containers\n   dockerFile -> Recipe to build your dev environment\n   workspace -> Place to add your projects\n      -> default/ -> Project defaults, mapped by ngnix.   \n```\n\nThe idea is simple like this, each new project should be added into workspace/ folder and each one should have a new nginx file to set it own hostName and documentRoot. Of course remember to set/map your hostName into your local hosts files. Again, all the steps are fully described in the README file\n\n> It is important to remember this a a image to local development purposes, so to production and pipeline environment you should create another images.\n\nPlease like it, comment and share. \nIf you have any question just write it in the comments.",
    "positive_reactions_count": 0,
    "cover_image": null,
    "tag_list": [
      "php",
      "docker",
      "javascript",
      "webdev"
    ],
    "canonical_url": "https://dev.to/getjv/dev-environment-with-docker-php-and-xdebug3-28m5",
    "reading_time_minutes": 2,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 730302,
    "title": "WIN10 turning on your pc at 02:00 am :/",
    "description": "Hello there, here goes a solution to a regular problem on windows machines.   I keep my PC near to my...",
    "published": true,
    "published_at": "2021-06-16T17:26:05.984Z",
    "slug": "win10-turning-on-your-pc-at-02-00-am-24i5",
    "path": "/getjv/win10-turning-on-your-pc-at-02-00-am-24i5",
    "url": "https://dev.to/getjv/win10-turning-on-your-pc-at-02-00-am-24i5",
    "comments_count": 0,
    "public_reactions_count": 2,
    "page_views_count": 22,
    "published_timestamp": "2021-06-16T17:26:05Z",
    "body_markdown": "Hello there, here goes a solution to a regular problem on windows machines. \n\nI keep my PC near to my bed, and when win10 just turn on the PC that broke my sleep. OH GOD!\n\nAt beginning I guess it was some kind of virus but is only a routine maintence task. After some days and several tries I found the solution. \n\nThe windows 10 usully turn on the pc at 02:00 am to execute his regular maintence, and desactivate that is really simple.\n\n1. Press WindowsKey + Q\n2. Serch for \"Maintenance\", click over \"Security and Maintenance\" usually have a blu flag icon.\n3. Expand the Maintenance section\n4. Click over \"Change maintenance settings\"\n5. Uncheck the option \"Allow ... to wake up my computer...\"\n\nProblem solved! THANK GOD!\n\nI've found the solution in these sites:\n* [superuser.com](https://superuser.com/questions/958109/how-to-prevent-windows-10-waking-from-sleep-when-traveling-in-bag/961754#961754)\n* [youtube.com](https://www.youtube.com/watch?v=yAWk-wBFt0Q)\n* [qastack.com.br](https://qastack.com.br/superuser/958109/how-to-prevent-windows-10-waking-from-sleep-when-traveling-in-bag)\n\nThere are a lot of alternatives there feel free to check those. I just bring here that one which works for me.\n\nSee you, Bye!\n\n\n---\n<small>Photo by Tima Miroshnichenko from Pexels</small>\n\n",
    "positive_reactions_count": 2,
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fm9l40qkqtlb24g2f1g1f.jpg",
    "tag_list": [
      "windows",
      "system",
      "wakeup",
      "taskmanager"
    ],
    "canonical_url": "https://dev.to/getjv/win10-turning-on-your-pc-at-02-00-am-24i5",
    "reading_time_minutes": 1,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 692835,
    "title": "Code Snippets no PhpStorm",
    "description": "Recentemente mudei do VScode para o PhpStorm e estou aprendendo a utilizar essa nova ferramenta enqua...",
    "published": true,
    "published_at": "2021-05-09T17:13:54.017Z",
    "slug": "code-snippets-no-phpstorm-2pn1",
    "path": "/getjv/code-snippets-no-phpstorm-2pn1",
    "url": "https://dev.to/getjv/code-snippets-no-phpstorm-2pn1",
    "comments_count": 0,
    "public_reactions_count": 6,
    "page_views_count": 274,
    "published_timestamp": "2021-05-09T17:13:54Z",
    "body_markdown": "Recentemente mudei do VScode para o PhpStorm e estou aprendendo a utilizar essa nova ferramenta enquanto trabalho no dia a dia e também enquanto estudo o curso de testes do [Fabio Vedovelli](https://classes.vedovelli.com.br/?class=testar-aplicacoes-javascript-criacao-projeto-instalacao-jest), que tem me ensinado várias coisas novas inclusive além dos testes.\n\nDurante o curso foram criados vários snippets pra ajudar na criação dos testes, entretanto o curso foi gravado com VScode e agora estou noutra IDE. \n\nO PhpStorm também tem esse recurso mas lá é conhecido como: `Live Template`, e como o processo de criação é um pouquinho complexo vou registar aqui como fazer um.\n\nNesse post estou criando templetes para testes em JS, mas e claro que o processo de criação será o mesmo para outras linguagens / necessidades.\n\n## Criando o Live Template.\n\nObs: Estou usando WIN 10, com wsl2 e phpstorm 2021.1\n\n1. No PHPstorm vá em `File > Settings`\n2. Agora vá em `Editor > Live Templates`\n3. Procure a seção `JavaSript Testing`\n4. E clique no Sinal `+` para adicionar um novo item na seção\n![Passos do 1 ao 4](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wurdwp68d9aj3jzbhi5g.png)\n5. Clique na opção `1. Live Template`\n6. Na nova seção que apareceu preencha os campos conforme abaixo:\n   * Abbreviation: \"jit\"\n   * Description: \"Jest Integration Template with MirageJS\"\n   * Template Text:\n    ```javascript\n    import { screen, render, waitFor } from '@testing-library/react';\n    import { makeServer } from '../miragejs/server';\n    import $Name$ from './$OriginalName$'\n    const render$Name$ = () => { render(<$Name$ />); };\n    describe('$Name$', () => {\n      let server;\n      beforeEach(() => { \n        server = makeServer({ environment: 'test' }); \n      });\n      afterEach(() => { server.shutdown(); });\n      it('should render the child 10 times', async function () {\n        server.createList('mirageModelName', 10);\n        render$Name$();\n        await waitFor(() => {\n        expect(screen.getAllByTestId('child-test-id')).toHaveLength(10);\n        });\n      });\n    });\n    ```\n7. Clique no link `Change` pra informar em qual contexto isso será usado, Selecione a seção: `JavaScript and TypeScript`\n8. Clique no botão `Edit Variables` pra definir o comportamento das variáveis que usamos no template.\n9. Informe os seguintes valores para cada uma:\n   * Name: `capitalize(camelCase(substringBefore(fileName(),\".\")))`\n   * OriginalName: `substringBefore(fileName(),\".\")`\n   * Para ambas marque a opção: `Skip if defined`\n10. Salve as formulas. confirme tudo e agora vamos testar.\n![Passos do 5 ao 10](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlgdccfqtjq8necgnaom.png)\n\n## Utilização do Live template\n\nAgora basta criar um arquivo js, escrever o acronimo `jit` e confirmar com `tab` ou `enter` vai funcionar assim:\n![Gif demonstração de uso](https://media.giphy.com/media/M6PArOs6X20qPYikUp/source.gif)\n\n## Customizando ao seu gosto\n\nCriar esses blocos de código ajudam muito na produtividade mas nem tudo são flores e sempre haverá algo para ajustar, mas agora vocês tem o caminho das pedras.\n\nSe quiserem conhecer mais visitem a [página de live templates](https://www.jetbrains.com/help/phpstorm/tutorial-creating-live-templates.html) do phpstorm e também [a página que fala mais sobre cada uma das funções disponíveis](https://www.jetbrains.com/help/phpstorm/template-variables.html) para a variáveis de template.\n\nBons códigos e até a próxima.\n\n<small>Cover Photo by Matheus Bertelli from Pexels</small>\n\n",
    "positive_reactions_count": 6,
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ftbdg90fpr6u7yr3zjb3d.jpg",
    "tag_list": [
      "phpstorm",
      "javascript",
      "tdd",
      "php"
    ],
    "canonical_url": "https://dev.to/getjv/code-snippets-no-phpstorm-2pn1",
    "reading_time_minutes": 2,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 643291,
    "title": "Xdebug 3, Docker, Laravel, VScode",
    "description": "Neste guia mostro uma das várias maneiras de configurar seu xdebug em um ambiente PHP com docker.   C...",
    "published": true,
    "published_at": "2021-03-23T16:06:55.498Z",
    "slug": "xdebug-3-docker-laravel-vscode-52bi",
    "path": "/getjv/xdebug-3-docker-laravel-vscode-52bi",
    "url": "https://dev.to/getjv/xdebug-3-docker-laravel-vscode-52bi",
    "comments_count": 9,
    "public_reactions_count": 14,
    "page_views_count": 3878,
    "published_timestamp": "2021-03-23T16:06:55Z",
    "body_markdown": "Neste guia mostro uma das várias maneiras de configurar seu xdebug em um ambiente PHP com docker. \n\nConfigurar o xdebug sempre foi chato! mas não da pra codar sem ele e agora com sua versão 3 (que ficou excelente) e com docker as coisas ficaram bem mais fáceis. Vamos para a ação!\n\n## Imagem docker\n\nTenho uma [imagem de estimação](https://hub.docker.com/r/getjv/php-apache) que uso pra trabalhar com docker em meu projetos laravel. Então ela e a base de minha configuração.\n\n### Instalação do xdebug 3\n\nDepois de várias horas estudando essa foi a melhor configuração que cheguei : \n\ntrecho do meu dockerFile\n``` \n[ ... outros comandos ... ]\n\nRUN yes | pecl install xdebug \\\n    && docker-php-ext-enable xdebug \\\n    && echo \"xdebug.mode=debug\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.idekey=VSCODE\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.client_host=host.docker.internal\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_connect_back=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.log=/var/www/html/xdebug.log\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && touch /var/www/html/xdebug.log \\\n    && chown developer:www-data /var/www/html/xdebug.log \\\n    && chmod 775 /var/www/html/xdebug.log\n```\nAlgumas explicações:\n\n* `pecl install xdebug` e `docker-php-ext-enable xdebug` Instala e habilita o xdebug 3 na minha imagem.\n*  `xdebug.mode=debug` coloca o modo de debug desejado\n*  `xdebug.idekey=VSCODE` coloca a chave personalizada utilizada no vscode. \n*  `xdebug.client_host=host.docker.internal` define o host para o docker.\n*  `xdebug.log=/var/www/html/storage/logs/xdebug.log` local para o arquivo de log do xdebug. Como estou utilizando laravel o coloquei nessa path pra evitar problemas de escrita.\n\nApenas esses parametros já instalam e configuram o xdebug no ambiente.\n\n**Atenção:** Diversos tutoriais e post utilizam [parametors das versões 2.x.x do xdebug que foram descontinuados ou que são redundantes](https://xdebug.org/docs/upgrade_guide). Sempre leia a documentação oficial para entender o objetivo de cada instrução. \n\n### Verificando se o xdebug 3 esta instalado\n\n#### Método 1 - Modo texto\n\nCom o container rodando entre no bash do mesmo e execute `php -i | grep xdebug` a saída deve ser algo assim:\n\n```\njhonatan@desktop:~/git/my_project$ docker exec -it my_container bash\nroot@e466f2d7bd63:/var/www/html# php -i | grep xdebug\n/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini,\nxdebug\nSupport Xdebug on Patreon, GitHub, or as a business: https://xdebug.org/support\n           Enabled Features<br/>(through 'xdebug.mode' setting)\n[.. várias variáveis aqui ...]\n```\n#### Método 2 - Modo gráfico\n\nAssim como temos o `phpinfo()` para ver a configuração do php temos o `xdebug_info()`. Basta colocar ele num script e o resultado visual vai aparecer como o exemplo abaixo:\n\n![Config gráfica do xdebug](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y66wzk3prozk96gdxfhv.png)\n\n**Atenção:** Observe a seção `Diagnostc log` é nela que serão apresentadas as mensagem de erro e que estarão impedindo seu debug de funcionar. Essa seção é sua melhor amiga e vai te ajudar a identificar seus problemas.\n\n## Configuração da extensão do navegador.\n\nBasicamente temos 3 configurações pra debugar:\n1. `O modo script/terminal`. que não é o foco desse guia. \n2. `O modo 'toda debuga toda request'` que torna seu ambiente lento pois toda e qualquer request vai iniciar usar o modo debug, pra ativa-la se usa o parâmetro: `xdebug.start_with_request=yes`. \n3. `O modo com extensão` que só usa o debug SE a extensão estiver ativada (besouro verde) E o modo debug habilidato no vscode. É esta que utilizaremos neste guia.\n\nPara instalar a extensão em navegadores baseados em chrominium (chrom e edge) [utilize esse link.](https://chrome.google.com/extensions/detail/eadndfjplgieldjbigjakmdgkmoaaaoc) [Para demais navegadores veja na doc oficial](https://xdebug.org/docs/step_debug#browser-extensions)\n\nPara ativar a extensão:\n1. Clique no besouro com o botão direito e va em opções. \n2. Selecione a opção `others` e coloque a chave como VSCODE (que é o mesmo valor que passamos para o `xdebug.idekey` la em nosso dockerfile) e salve.\n\n![Exemplo para configuraçao da extensão de debug](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b43hq6j2sv5sbt1cz7q9.png)\n\n## Configuração no VSCode.\n\n#### Extensão de debug do vscode\n\n* Instale a [extensão do felix](https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug), ou outra de sua preferência.\n\n#### Ativando breakpoints\n1. Vá em `File > preferences > settings`\n2. Na tela de Settings vá em `Features > Debug`\n3. Habilite a opção `Allow setting breakpoints in any file.`\n\n#### Configurando o debug\n1. Clique no contexto de debug do VScode (fica no side menu do lado esquerdo)\n2. Clique para criar o arquivo launch.json\n3. Essa é a minha configuração:\n```\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Listen for XDebug\",\n            \"type\": \"php\",\n            \"request\": \"launch\",\n            \"hostname\": \"0.0.0.0\",\n            \"port\": 9003,\n            \"log\": true,\n            \"pathMappings\": {\n                \"/var/www/html\": \"${workspaceFolder}\"\n            },\n            \"ignore\": [\"**/vendor/**/*.php\"],\n            \"xdebugSettings\": {\n                \"max_children\": 10000,\n                \"max_data\": 10000,\n                \"show_hidden\": 1\n            }\n        },\n        {\n            \"name\": \"Launch currently open script\",\n            \"type\": \"php\",\n            \"request\": \"launch\",\n            \"program\": \"${file}\",\n            \"cwd\": \"${fileDirname}\",\n            \"port\": 9000\n        }\n    ]\n}\n\n```\n\n**Atenção:** Observe o parametro `\"hostname\": \"0.0.0.0\",` esse é a config que me salvou. sem ela você vai receber o erro abaixo a todo momento pois o host docker não estará mapeado. exemplo dos  recebidos por mapeamento incorreto entre host/docker/vscode: \n\n* `[Step Debug] Time-out connecting to debugging client, waited: 200 ms. Tried: host.docker.internal:9003 (through xdebug.client_host/xdebug.client_port) :-(`\nou\n* `[Step Debug] Time-out connecting to debugging client, waited: 200 ms. Tried: localhost:9003 (through xdebug.client_host/xdebug.client_port) :-(`\n \n## Docker-compose e Video demostrativo\n\nPra facilitar mais e ver tudo em funcionamento adicionei [esse video demostrativo e com umas explicações a mais.](https://youtu.be/s-ot-Zh8LRQ) \n\nCaso vocês queira utilizar a mesma imagem que eu uso aqui esta a docker-compose.yml\n\n```\nversion: \"3\"\nservices:\n  backend:\n    container_name: backend\n    image: getjv/php-apache\n    restart: always\n    ports:\n      - \"80:80\"\n    volumes:\n      - .:/var/www/html\n    environment:\n      - DOCUMENT_ROOT_CONTEXT=public\n      - ALLOW_OVERRIDE_OPTION=All\n      - APPLICATION_ENV_OPTION=development\n```\n\n\n## Conclusão e preview de uso.\n\nPronto! com isso você já deve ter o debug funcionando. Ligue o debug no navegador e no vscode, coloque seus breakpoints e seja feliz.\n\nEspero que estas infos tenham sido úteis. Lembre-se de compartilhar em suas redes certamente vai ajudar muita gente que tem o mesmo problema que você.\n\nCompartilhe sempre o que é bom! e dê crédito aos seus autores.\n\nSegue o preview:\n\n![preview do debug em uso](https://media.giphy.com/media/3jEpbvxllrtB4uMlY1/source.gif)\n\n\n## Referências\n\n* Muitos outros posts do stakoverflow e claro a documentação oficial [xdebug](https://xdebug.org)\n* Um agradecimento especial para [laptrinhx.com](https://laptrinhx.com/vscode-dockerkontena-neinophpwodebaggusuru-ji-host-docker-internalni-jie-xudekinai-wen-tino-dui-chu-3354546647/) que me ajudou a resolver o hots:0.0.0.0\n* [Foto de George Becker no Pexels utilizada na capa](https://www.pexels.com/pt-br/foto/1-1-3-texto-no-quadro-negro-374918/)",
    "positive_reactions_count": 14,
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fqej4iz7rj6i0f5mdi8hj.jpg",
    "tag_list": [
      "xdebug",
      "docker",
      "laravel",
      "vscode"
    ],
    "canonical_url": "https://dev.to/getjv/xdebug-3-docker-laravel-vscode-52bi",
    "reading_time_minutes": 5,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 393648,
    "title": "Modifying hook methods with optionMergeStrategies",
    "description": "Welcome to VueJs mastering the API, today we will talk about the optionMergeStrategies method.  It pr...",
    "published": true,
    "published_at": "2020-10-14T00:14:35.181Z",
    "slug": "modifying-hook-methods-with-optionmergestrategies-1h5l",
    "path": "/getjv/modifying-hook-methods-with-optionmergestrategies-1h5l",
    "url": "https://dev.to/getjv/modifying-hook-methods-with-optionmergestrategies-1h5l",
    "comments_count": 0,
    "public_reactions_count": 2,
    "page_views_count": 394,
    "published_timestamp": "2020-10-14T00:14:35Z",
    "body_markdown": "Welcome to VueJs mastering the API, today we will talk about the [optionMergeStrategies](https://vuejs.org/v2/api/index.html#optionMergeStrategies) method.\n\nIt provides us a powerful way to create plugins to intercept and modify the default behavior of [Vue hook life cycle](https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram).\n\nNone of the [official documentation](https://vuejs.org/v2/api/index.html#optionMergeStrategies)helps me to learn how to use it, So after some research finally learn a path.\n\n# How to use optionMergeStrategies\n\n1. Create the file: `src/plugins/customMethods.js` \n{% gist https://gist.github.com/getJv/25ca0db2d558180fdd09fec9dbbce6d3 %}\n\n2. Now to install the plugin add the code to your `src/main.js`:\n{% gist https://gist.github.com/getJv/74048e9e9c9ebc17ba5fb9308c7b1b8c %}\n\n3. Once installed our customMethod will be available in any component\n{% gist https://gist.github.com/getJv/aab15bca669272467f3d433e3b81df6e %}\n\n4. The console with print the messages at following order:\n   ![Life cycle console prints](https://dev-to-uploads.s3.amazonaws.com/i/g86allfsr6tiqtxmitck.png)\n\nThe customMethod executes him code right before the default createdMethod code, so if you need to run something before the default hooks code just replace the line 8 to another hookMethod from `customMethod.js` or overwrite another hookMethod.\n\n__**If I help you please consider helping me too. Leave comments, share it. Believe me, your feedback it's really important to me.**__\n\n##### References\n\n* [Vue.js Mixins — Global Mixins and Custom Merge Strategies](https://medium.com/javascript-in-plain-english/vue-js-mixins-global-mixins-and-custom-merge-strategies-187f7dac6a8f)\n* [Mixins](https://www.w3resource.com/vue/mixins.php)\n* [Mixins](https://sodocumentation.net/vue-js/topic/2562/mixins)\n* [Vue Mastery class](https://www.vuemastery.com/courses/next-level-vue/mixins)\n* [Issue StackOverflow](https://stackoverflow.com/questions/59114128/how-to-add-global-funtions-like-create-methods-mounted-from-a-plugin-in-vue)\n\n\n\n\n",
    "positive_reactions_count": 2,
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fi%2Fiuc4iwj2uw08ynnn1o5u.jpg",
    "tag_list": [
      "vue",
      "optionmergestrategies",
      "javascript",
      "vuejsmasteringapi"
    ],
    "canonical_url": "https://dev.to/getjv/modifying-hook-methods-with-optionmergestrategies-1h5l",
    "reading_time_minutes": 2,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 483561,
    "title": "Updating Iframe height based on his content.",
    "description": "Introduction   I know I know we need to avoid use Iframes. But when our client need it... We...",
    "published": true,
    "published_at": "2020-10-11T05:40:40.910Z",
    "slug": "updating-iframe-height-based-on-his-content-j8p",
    "path": "/getjv/updating-iframe-height-based-on-his-content-j8p",
    "url": "https://dev.to/getjv/updating-iframe-height-based-on-his-content-j8p",
    "comments_count": 0,
    "public_reactions_count": 10,
    "page_views_count": 9013,
    "published_timestamp": "2020-10-11T05:40:40Z",
    "body_markdown": "\n## Introduction\n\nI know I know we need to avoid use Iframes. But when our client need it... We use it.\n\nLast week, one of my clients complain that his iframe was showing the scrollbar when his height content changes because of the iframed-site-responsivity\n\nWell, that is e real problem. But how to change the iframe height if the host-site doesn't know when the iframe content was updated?\n\n![iframe without auto-height ](https://media.giphy.com/media/6217uC0bdyeNJw9jI9/giphy.gif)\n\nAfter some research I found a possible solution using the window.postMessage, and here goes it:\n\n## Workflow information\n\nBasically, the idea is recursively to send a postMessage from the 'guest-page' as a signal notifying the actual page height. Now on the other side, the 'host-page' needs to has a listener, catching the message and updated the iframe height.\n\n## The code from guest-side\n\nHere I'm using the vue. The most important lines are:\n* line 13: i set the ref of object I want to get the height.\n* line 46: I use the method `iframeHeightNotify` to get the page-height by ref and send the postMessage.\n* line 39: I set the page to recursively send the height.\n* line 43: I finish the recursive operation ;\n\n**IMPORTANT:** As recommended by [Mozzila](https://developer.mozilla.org/pt-PT/docs/Web/API/Window/postMessage) it is not a good choice send messages using broadcast ( the * at line 50), by here is just a sample, set the target origin and validate it on the host side it is on you. \n\n{% gist https://gist.github.com/getJv/341632f70d1a00db00f58d736b98dac1.js %}\n\n## The code from host-side\n\nHere I'm using the HTML and Jquery. The most important lines are:\n* line 16: I set an id to my iframe\n* line 7: I set the Listener and update the iframe height based on the incoming message\n\n{% gist https://gist.github.com/getJv/964314d457669e4cf012bd22c34f26a5.js %}\n\n## Final result\n\nAnd here is the final result\n\n![iframe with auto-height ](https://media.giphy.com/media/EF5S1xVIndLVl4eN3h/giphy.gif)\n\nI hope this content be useful to you. \nMy best wishes See you.",
    "positive_reactions_count": 10,
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fi%2F7wdy7cj9om44go1ghiz0.jpg",
    "tag_list": [
      "iframe",
      "postmessage",
      "vue",
      "javascript"
    ],
    "canonical_url": "https://dev.to/getjv/updating-iframe-height-based-on-his-content-j8p",
    "reading_time_minutes": 2,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 404371,
    "title": "Rich pull requests with gifs",
    "description": "Hello all,   Here is a quick guide about how I offer a rich experience to reviewers and other communi...",
    "published": true,
    "published_at": "2020-07-20T00:47:28.854Z",
    "slug": "rich-pull-requests-with-gifs-53k9",
    "path": "/getjv/rich-pull-requests-with-gifs-53k9",
    "url": "https://dev.to/getjv/rich-pull-requests-with-gifs-53k9",
    "comments_count": 0,
    "public_reactions_count": 5,
    "page_views_count": 399,
    "published_timestamp": "2020-07-20T00:47:28Z",
    "body_markdown": "Hello all, \n\nHere is a quick guide about how I offer a rich experience to reviewers and other community members in my pull requests using gifs previews.\n\n## Preview of PR using gifs\n\n![Preview of one of my last PR's](https://media.giphy.com/media/H1T3CBTCLLtZvToFR5/source.gif)\n\n## Tools and websites\n\nTo use this technique you will need:\n\n* A software to recorder your gifs, I suggest [Screen2gif](https://www.screentogif.com/) at Windows users and [Peek](https://github.com/phw/peek) to Linux users. \n * I know Linux users like to have options [here are they. :D](https://itsfoss.com/best-gif-recorder-linux/).\n\n\n## Work process to create, publish, and use the gif.\n\nKnow please follow these steps to create your gif (at windows):\n\n1. Open the Screen2Gif\n2. Pick the recorder option\n3. Resize the recorder area as you need.\n![recorder window](https://dev-to-uploads.s3.amazonaws.com/i/r2w8dfzvn2tkuvtzwqwt.png)\n4. Start to the recorder (f7) and stop it when finish (f8)\n5. The Screen2Gif will open the gif project editor\n6. Now, you can go to the Playback section to run your gif or remove desired frames.\n7. To save o export your gif go to the File Section and click on the Save button\n8. Select your preferred format and hit save.\n![ScresstoGif editor](https://dev-to-uploads.s3.amazonaws.com/i/jow141yllfdz4flpdxw8.png)\n9. When the conversion process has done access the wire [gliphy.com](https://giphy.com/)\n10. Press the Upload button, select your gif file and wait.\n11. When the upload it is complete click on the media option and copy the link optimized to media social option.\n![Step 11 sample](https://dev-to-uploads.s3.amazonaws.com/i/mls7gtcdfah70biwpbiu.png)\n12. Know just use the link as you wish in you PR description there is he sintaxe template:\n```html\n <img with=\"700px\" src=\"YOUR-LINK\" /> \n```\n\n### Video Sample\n\nHere is a short video to show my whole work process:\n\n{% youtube -4tYUdpjHAM %}\n\n#### Important to me ;)\n\nIf I help you please consider to leave comments, share it. \nBelieve me, your feedback it's really important.\n",
    "positive_reactions_count": 5,
    "cover_image": null,
    "tag_list": [
      "github",
      "workprocess",
      "community"
    ],
    "canonical_url": "https://dev.to/getjv/rich-pull-requests-with-gifs-53k9",
    "reading_time_minutes": 2,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 316344,
    "title": "HTTP/3: A próxima evolução.",
    "description": "Tópicos    Fonte do conteúdo O que mudou Desafios da nova versão Quando será lançado...",
    "published": true,
    "published_at": "2020-04-21T21:44:12.306Z",
    "slug": "http-3-a-proxima-evolucao-29c0",
    "path": "/getjv/http-3-a-proxima-evolucao-29c0",
    "url": "https://dev.to/getjv/http-3-a-proxima-evolucao-29c0",
    "comments_count": 0,
    "public_reactions_count": 1,
    "page_views_count": 75,
    "published_timestamp": "2020-04-21T21:44:12Z",
    "body_markdown": "#### Tópicos\n* [Fonte do conteúdo](#chapter-1)\n* [O que mudou](#chapter-2)\n* [Desafios da nova versão](#chapter-3)\n* [Quando será lançado](#chapter-4)\n\n### Fonte <a name=\"chapter-1\"></a>\n\nEste é um resumo geral da [apresentação](https://www.youtube.com/watch?v=rlN4F1oyaRM) de [Daniel Stenberg](https://twitter.com/bagder), criador do [Curl](https://en.wikipedia.org/wiki/CURL), sobre a próxima versão do protocolo HTTP apresentado na conferência GOTO em 17 de abril de 2020.\n\n### O que mudou <a name=\"chapter-2\"></a>\n\nPara enteder o que mudou é importante conhecer como era antes. No início com o Http/1 já tinhamos a tão conhecida comunicação entre cliente e servidor. Entretanto tudo ocorria de maneira mais simples, onde vários pacotes eram perdidos pelo caminho e tudo era lento, algo bem precário. Todas as transmissões ocorriam via um único canal e com o crescrimento das requisições e quantidade de conteúdo transmitido ficou inviável garantir o controle e qualidade. \n\nCom o Http/2 chegou a ideia de transmissão em streams, que são canais independentes e paralelos para transmissão de dados. Agora com múltiplas vias de comunicação um website poderia carregar de maneira paralela vários conteúdos diferentes e ao mesmo tempo, textos, imagens e outros assets. Antigamente na versão 1 tudo era carregado junto e de uma só vez e ficavamos segundos eternos olhando para uma tela branco ou com conteúdo pela metade. É claro que entre a versão 1 e 2 existiram outros pontos de melhoria, este foi o que escolhi destacar.\n\nNa segunda versão também teve início o uso da camada TCP para garantir qualidade e a TLS para a transmissão segura do conteúdo. Mas ainda é \"opcional\" a utilização ou não da transmissão segura de informações, o que será bem diferente na versão seguinte.\n\nCom a chegada do Http/3 toda a comunicação será segura, sem excessões. Assim como na versão anterior a comunicação também será via streams, mas desta vez com garantia de maior organização e melhor entrega dos pacotes. \n\nNa nova versão o TCP será subistituido pelo [QUIC/TLS3](https://en.wikipedia.org/wiki/QUIC). Verdade! Quer ver melhorar? A transmissão dos streams será via UDP, mas claro com proteções para impedir falhas como ataque DDOS e outros mais. Por último promete-se uma maior velicidade nas comunicações e agilidades na troca iniciais de handshakes.\n\n### Desafios da nova versão <a name=\"chapter-3\"></a>\n\nComo em qualquer evolução, o produto (Http/3) não esta totalmente pronto e tão poucos nós estamos prontos para recebê lo. Seguem os pontos destacados por Daniel para a serem vencidos antes do lançamento e uso oficial:\n\n1. **Liberação do UDP:** Das transmissões sob a nova versão ainda há uma falha de 3-7%. Fora que a maioria das empresas bloqueiam a transmissão via UDP para evitar ataques de negação de serviço. \n\n2. **Evolução de Clientes e Servidores:** Nossos clientes e servidores web deverão evoluir para o uso das novas nuances da nova versão. E durante a transmição ainda será necessário a aptidão para suportar a comunicação por ambos os protocolos.  \n\n3. **Sobrecarga de processamento:** Com o novo gerenciamento de streams, maior velocidade de transmissão e novos algoritmos pode-se esperar uma maior demanda de processamento. Mais velocidade, potência, segurança, conforto? Maior consumo/custo.\n\n4. **Melhor gerenciamento das stacks de UDP:** A ideia de usar stacks/streams não é 100% nova. Mas gerir tudo isso com UDP ainda é, por isso muitas melhorias ainda estão por vir.\n\n5. **A nova TLS/3:**  Na nova versão O TLS também vai evoluir. O grande ponto levantado por Daniel e que todo o TLS foi construído para uso via TCP e a versão 3 ainda seria apenas uma adaptação para o novo modelo.\n\n6. **Padrões e API's ainda não estão 100% prontas:** A nova versão ainda não esta completa, então muitos ainda pode personalizar algumas coisas de seus pontos, mesmo que ocorra uma pequena bagunça no futuro. \n\n### Quando será lançado <a name=\"chapter-4\"></a>\n\nSegundo o roadmap o lançamento seria agora para o segundo semestre de 2020, mas parece que ainda há um longo caminho. Caso queira testar o Curl ja pode ser utilizado para acessar alguns dos serviços mais conhecidos e estudar as respostas, segue um comando básico para testes:\n\n``` Curl --http3 --head <https://SITE-DESEJADO> ``` \n\nObrigado por ler até aqui, espero que tenha gostado e lembre-se de [acessar conteúdo na integra](https://www.youtube.com/watch?v=rlN4F1oyaRM) para mais informações. \n\nComente, compartilhe e me siga para mais conteúdos de qualidade.\nAté a próxima.\n\n\n\n\n",
    "positive_reactions_count": 1,
    "cover_image": "https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fi%2Fncrv5iozv43ilsqtlkns.png",
    "tag_list": [
      "http",
      "news",
      "security",
      "webdev"
    ],
    "canonical_url": "https://dev.to/getjv/http-3-a-proxima-evolucao-29c0",
    "reading_time_minutes": 4,
    "user": {
      "name": "Jhonatan Morais",
      "username": "getjv",
      "twitter_username": "getJv",
      "github_username": "getJv",
      "user_id": 219482,
      "website_url": "https://www.linkedin.com/in/jhonatan-morais/?locale=en_US",
      "profile_image": "https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg",
      "profile_image_90": "https://media2.dev.to/dynamic/image/width=90,height=90,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F219482%2Ff46c4d4c-34ba-4864-9765-f7d5ae7b89df.jpeg"
    },
    "flare_tag": {
      "name": "news",
      "bg_color_hex": "#111111",
      "text_color_hex": "#fff9ac"
    }
  }
]